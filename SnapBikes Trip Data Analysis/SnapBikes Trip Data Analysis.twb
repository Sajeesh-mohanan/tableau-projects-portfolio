<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0208.0338                               -->
<workbook original-version='18.1' source-build='2024.3.4 (20243.25.0208.0338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='201802-citibike-tripdata_Full D (201802-citibike-tripdata_Full Data)' inline='true' name='federated.02o4o8v0iko5im1gw8zel1w1fma2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='201802-citibike-tripdata_Full Data' name='excel-direct.0tds9ed15kzqfn1d47plm1irzgbk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ASUS/OneDrive/Desktop/Imarticus AI and ML/Tableau/Tableau Home Assignment/Tableau Home Assignment/201802-citibike-tripdata_Full Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0tds9ed15kzqfn1d47plm1irzgbk' name='201802-citibike-tripdata_Full D' table='[&apos;201802-citibike-tripdata_Full D$&apos;]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Trip ID' ordinal='0' />
            <column datatype='integer' name='Birth Year' ordinal='1' />
            <column datatype='string' name='End Station Name' ordinal='2' />
            <column datatype='string' name='Gender' ordinal='3' />
            <column datatype='string' name='Start Station Name' ordinal='4' />
            <column datatype='datetime' name='Starttime' ordinal='5' />
            <column datatype='datetime' name='Stoptime' ordinal='6' />
            <column datatype='string' name='Usertype' ordinal='7' />
            <column datatype='integer' name='Bikeid' ordinal='8' />
            <column datatype='integer' name='End Station Id' ordinal='9' />
            <column datatype='real' name='End Station Latitude' ordinal='10' />
            <column datatype='real' name='End Station Longitude' ordinal='11' />
            <column datatype='integer' name='Start Station Id' ordinal='12' />
            <column datatype='real' name='Start Station Latitude' ordinal='13' />
            <column datatype='real' name='Start Station Longitude' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trip ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Trip ID]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Trip ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Birth Year]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Birth Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[End Station Name]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>End Station Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Start Station Name]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Start Station Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Starttime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Starttime]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Starttime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stoptime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Stoptime]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Stoptime</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Usertype</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Usertype]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Usertype</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bikeid]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Bikeid</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[End Station Id]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>End Station Id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[End Station Latitude]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>End Station Latitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Station Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[End Station Longitude]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>End Station Longitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Start Station Id]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Start Station Id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Start Station Latitude]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Start Station Latitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Station Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Start Station Longitude]</local-name>
            <parent-name>[201802-citibike-tripdata_Full D]</parent-name>
            <remote-alias>Start Station Longitude</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Birth Year]' role='dimension' type='quantitative' />
      <column caption='Trip duration' datatype='integer' name='[Calculation_390124319448207360]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, [Starttime], [Stoptime])' />
      </column>
      <column caption='Hour' datatype='integer' name='[Calculation_390124319460843521]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEPART(&apos;hour&apos;, [Starttime])' />
      </column>
      <column caption='Age' datatype='integer' name='[Calculation_390124319466934274]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEPART(&apos;year&apos;, TODAY()) - [Birth Year]' />
      </column>
      <column caption='Distance' datatype='real' name='[Calculation_390124319470116867]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='6371 * ACOS(&#13;&#10;    COS(RADIANS(90 - [Start Station Latitude])) *&#13;&#10;    COS(RADIANS(90 - [End Station Latitude])) +&#13;&#10;    SIN(RADIANS(90 - [Start Station Latitude])) *&#13;&#10;    SIN(RADIANS(90 - [End Station Latitude])) *&#13;&#10;    COS(RADIANS([Start Station Longitude] - [End Station Longitude]))&#13;&#10;)' />
      </column>
      <column aggregation='Avg' datatype='real' name='[End Station Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[End Station Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[End Station Name]' role='dimension' type='nominal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Start Station Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Start Station Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
      <column datatype='datetime' name='[Starttime]' role='dimension' type='ordinal' />
      <column datatype='datetime' name='[Stoptime]' role='dimension' type='ordinal' />
      <column caption='201802-citibike-tripdata_Full D' datatype='table' name='[__tableau_internal_object_id__].[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]' role='measure' type='quantitative' />
      <column-instance column='[End Station Name]' derivation='Count' name='[cnt:End Station Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Start Station Name]' derivation='Count' name='[cnt:Start Station Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Starttime]' derivation='Count' name='[cnt:Starttime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Stoptime]' derivation='Count' name='[cnt:Stoptime:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Stoptime]' derivation='Minute' name='[mi:Stoptime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[End Station Name]' derivation='None' name='[none:End Station Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Start Station Name]' derivation='None' name='[none:Start Station Name:nk]' pivot='key' type='nominal' />
      <group caption='Action (End Station Name,Start Station Name)' hidden='true' name='[Action (End Station Name,Start Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[End Station Name]' />
          <groupfilter function='level-members' level='[Start Station Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender)' hidden='true' name='[Action (Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Station Name)' hidden='true' name='[Action (Start Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Start Station Name]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ASUS/AppData/Local/Temp/TableauTemp/#TableauTemp_0cz8mqy0u6k2oh1bdafxr1upadwa.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/21/2025 03:27:29 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Trip ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Trip ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Trip ID</remote-alias>
              <ordinal>0</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>843114</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Birth Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Birth Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Birth Year</remote-alias>
              <ordinal>1</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>End Station Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[End Station Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>End Station Name</remote-alias>
              <ordinal>2</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2076</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>3</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Start Station Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Start Station Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Start Station Name</remote-alias>
              <ordinal>4</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1861</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Starttime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Starttime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Starttime</remote-alias>
              <ordinal>5</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>106849</approx-count>
              <contains-null>true</contains-null>
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Stoptime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Stoptime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Stoptime</remote-alias>
              <ordinal>6</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>106006</approx-count>
              <contains-null>true</contains-null>
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Usertype</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Usertype]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Usertype</remote-alias>
              <ordinal>7</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Bikeid</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Bikeid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bikeid</remote-alias>
              <ordinal>8</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48511</approx-count>
              <contains-null>true</contains-null>
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>End Station Id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[End Station Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>End Station Id</remote-alias>
              <ordinal>9</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2076</approx-count>
              <contains-null>true</contains-null>
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>End Station Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[End Station Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>End Station Latitude</remote-alias>
              <ordinal>10</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2076</approx-count>
              <contains-null>true</contains-null>
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>End Station Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[End Station Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>End Station Longitude</remote-alias>
              <ordinal>11</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2076</approx-count>
              <contains-null>true</contains-null>
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Start Station Id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Start Station Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Start Station Id</remote-alias>
              <ordinal>12</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1861</approx-count>
              <contains-null>true</contains-null>
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Start Station Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Start Station Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Start Station Latitude</remote-alias>
              <ordinal>13</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1861</approx-count>
              <contains-null>true</contains-null>
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Start Station Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Start Station Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Start Station Longitude</remote-alias>
              <ordinal>14</ordinal>
              <family>201802-citibike-tripdata_Full D</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1861</approx-count>
              <contains-null>true</contains-null>
              <object-id>[201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:End Station Name:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Stoptime:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Starttime:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.02o4o8v0iko5im1gw8zel1w1fma2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Start Station Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 71 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave - 1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 17 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bressler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S 5 Pl &amp; S 5 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henry St &amp; W 9 St [old]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NYCBS Depot - RIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Van Dyke St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28 St &amp; 40 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GOW Tech Shop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 12 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 41 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 45 St &amp; 6 Ave (OLD)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 16 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 36 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NYCBS Depot - STY - Garage 4&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 St &amp; 51 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cliff St &amp; Fulton St_1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sterling Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Schermerhorn St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prototype Lab Motivate Headquarters&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 98 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;8D Mobile 01&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mi:Stoptime:ok]' type='palette'>
            <map to='#499894'>
              <bucket>7</bucket>
            </map>
            <map to='#499894'>
              <bucket>28</bucket>
            </map>
            <map to='#499894'>
              <bucket>48</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>40</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2019</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>24</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>44</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11</bucket>
            </map>
            <map to='#79706e'>
              <bucket>32</bucket>
            </map>
            <map to='#79706e'>
              <bucket>52</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>8</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>29</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>49</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>4</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>25</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>45</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>17</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>38</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>58</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>41</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>15</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>36</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>56</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>26</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>46</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>12</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>33</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>53</bucket>
            </map>
            <map to='#d37295'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>34</bucket>
            </map>
            <map to='#d37295'>
              <bucket>54</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>16</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>37</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>57</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>18</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>39</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>59</bucket>
            </map>
            <map to='#e15759'>
              <bucket>9</bucket>
            </map>
            <map to='#e15759'>
              <bucket>30</bucket>
            </map>
            <map to='#e15759'>
              <bucket>50</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>27</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>47</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>42</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>14</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>35</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>55</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>31</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>51</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>43</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:End Station Name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='201802-citibike-tripdata_Full D' id='201802-citibike-tripdata!Full D_CA6522DBC7214CCAA95EF983F77BCBD8'>
            <properties context=''>
              <relation connection='excel-direct.0tds9ed15kzqfn1d47plm1irzgbk' name='201802-citibike-tripdata_Full D' table='[&apos;201802-citibike-tripdata_Full D$&apos;]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Trip ID' ordinal='0' />
                  <column datatype='integer' name='Birth Year' ordinal='1' />
                  <column datatype='string' name='End Station Name' ordinal='2' />
                  <column datatype='string' name='Gender' ordinal='3' />
                  <column datatype='string' name='Start Station Name' ordinal='4' />
                  <column datatype='datetime' name='Starttime' ordinal='5' />
                  <column datatype='datetime' name='Stoptime' ordinal='6' />
                  <column datatype='string' name='Usertype' ordinal='7' />
                  <column datatype='integer' name='Bikeid' ordinal='8' />
                  <column datatype='integer' name='End Station Id' ordinal='9' />
                  <column datatype='real' name='End Station Latitude' ordinal='10' />
                  <column datatype='real' name='End Station Longitude' ordinal='11' />
                  <column datatype='integer' name='Start Station Id' ordinal='12' />
                  <column datatype='real' name='Start Station Latitude' ordinal='13' />
                  <column datatype='real' name='Start Station Longitude' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_8DCAD14E526D445B946B7F4917E6376D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Analysing the distribution of the number of trips starts and ends for each hour of the day ' type='sheet' worksheet='Popular Start Station' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Analysing the distribution of the number of trips starts and ends for each hour of the day ' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Count of riders filtered by gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='201802-citibike-tripdata_Full D (201802-citibike-tripdata_Full Data)' name='federated.02o4o8v0iko5im1gw8zel1w1fma2' />
          </datasources>
          <datasource-dependencies datasource='federated.02o4o8v0iko5im1gw8zel1w1fma2'>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column-instance column='[Gender]' derivation='Count' name='[cnt:Gender:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Gender:qk]' value='55' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]</rows>
        <cols>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Gender:qk]</cols>
      </table>
      <simple-id uuid='{EEC047D3-6ADF-429C-B97C-8F10AE05B9EE}' />
    </worksheet>
    <worksheet name='Distribution of Endtime in time'>
      <table>
        <view>
          <datasources>
            <datasource caption='201802-citibike-tripdata_Full D (201802-citibike-tripdata_Full Data)' name='federated.02o4o8v0iko5im1gw8zel1w1fma2' />
          </datasources>
          <datasource-dependencies datasource='federated.02o4o8v0iko5im1gw8zel1w1fma2'>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[Stoptime]' derivation='Count' name='[cnt:Stoptime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Stoptime]' derivation='Hour' name='[hr:Stoptime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[Action (Gender)]'>
            <groupfilter function='member' level='[Gender]' member='&quot;Male&quot;' user:ui-action-filter='[Action1_560E8F22C8EF42CCB6EBC0D9D2CFBF53]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[Action (Start Station Name)]'>
            <groupfilter function='member' level='[Start Station Name]' member='&quot;Pershing Square North&quot;' user:ui-action-filter='[Action1_8DCAD14E526D445B946B7F4917E6376D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[Action (Gender)]</column>
            <column>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[Action (Start Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Stoptime:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Stoptime:qk]' />
              <text column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Stoptime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Stoptime:qk]</rows>
        <cols>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[hr:Stoptime:ok]</cols>
      </table>
      <simple-id uuid='{1F61B5A3-FE0F-490A-A0DF-9C56ABCA3537}' />
    </worksheet>
    <worksheet name='Distribution of common end stations on popular start stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='201802-citibike-tripdata_Full D (201802-citibike-tripdata_Full Data)' name='federated.02o4o8v0iko5im1gw8zel1w1fma2' />
          </datasources>
          <datasource-dependencies datasource='federated.02o4o8v0iko5im1gw8zel1w1fma2'>
            <column datatype='string' name='[End Station Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
            <column-instance column='[End Station Name]' derivation='Count' name='[cnt:End Station Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Station Name]' derivation='Count' name='[cnt:Start Station Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[End Station Name]' derivation='None' name='[none:End Station Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Start Station Name]' derivation='None' name='[none:Start Station Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([End Station Name])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;1 Ave &amp; E 110 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;1 Ave &amp; E 16 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;1 Ave &amp; E 18 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;1 Ave &amp; E 30 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;1 Ave &amp; E 44 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;1 Ave &amp; E 62 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;1 Ave &amp; E 78 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;1 Ave &amp; E 94 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;1 Pl &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;10 Hudson Yards&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;11 Ave &amp; W 27 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;11 Ave &amp; W 41 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;11 Ave &amp; W 59 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;12 Ave &amp; W 40 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;12 St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;2 Ave &amp; E 104 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;2 Ave &amp; E 31 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;2 Ave &amp; E 96 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;21 St &amp; 43 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;24 Ave &amp; 26 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;24 St &amp; 41 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;27 St &amp; Hunter St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;28 Ave &amp; 35 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;28 St &amp; 36 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;28 St &amp; 38 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;28 St &amp; 40 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;3 Ave &amp; E 100 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;3 Ave &amp; E 112 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;3 Ave &amp; E 62 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;3 Ave &amp; E 72 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;3 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;3 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;30 Ave &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;31 Ave &amp; Crescent St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;31 Ave &amp; Steinway St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;31 St &amp; 23 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;31 St &amp; Astoria Blvd&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;31 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;31 St &amp; Hoyt Ave N&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;31 St &amp; Northern Blvd&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;31 St &amp; Thomson Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;34 Ave &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;35 Ave &amp; 37 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;35 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;37 Ave &amp; 35 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;4 Ave &amp; 2 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;44 Dr &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;44 Dr &amp; Jackson Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;45 Rd &amp; 11 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;47 Ave &amp; 31 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;48 Ave &amp; 5 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;5 Ave &amp; 3 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;5 Ave &amp; E 103 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;5 Ave &amp; E 29 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;5 Ave &amp; E 63 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;5 Ave &amp; E 73 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;5 Ave &amp; E 78 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;5 Ave &amp; E 88 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;5 Ave &amp; E 93 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;5 St &amp; 51 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;5 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;6 Ave &amp; Canal St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;6 Ave &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;8 Ave &amp; W 52 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;9 Ave &amp; W 22 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;9 Ave &amp; W 28 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;9 Ave &amp; W 45 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;9 St &amp; 44 Rd&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Adelphi St &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Allen St &amp; Hester St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Allen St &amp; Rivington St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Allen St &amp; Stanton St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Amsterdam Ave &amp; W 125 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Amsterdam Ave &amp; W 66 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Amsterdam Ave &amp; W 79 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Atlantic Ave &amp; Fort Greene Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Atlantic Ave &amp; Furman St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Avenue D &amp; E 12 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Avenue D &amp; E 3 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Avenue D &amp; E 8 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Baltic St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bank St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bank St &amp; Washington St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Banker St &amp; Meserole Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Barclay St &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Barrow St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bayard St &amp; Baxter St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bayard St &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bedford Ave &amp; Bergen St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bedford Ave &amp; Nassau Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bedford Ave &amp; S 9 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bergen St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bergen St &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Berkeley Pl &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Berkeley Pl &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Berry St &amp; N 8 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bialystoker Pl &amp; Delancey St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Boerum St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bond St &amp; Bergen St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bond St &amp; Fulton St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; Battery Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; Berry St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; E 14 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; E 22 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; Moylan Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; Roebling St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 25 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 29 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 32 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 36 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 37 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 38 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 41 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 49 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 51 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 53 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 56 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 58 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Broadway &amp; W 60 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Brooklyn Bridge Park - Pier 2&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bus Slip &amp; State St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Bushwick Ave &amp; Powers St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Butler St &amp; Court St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Cadman Plaza E &amp; Red Cross Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Cadman Plaza E &amp; Tillary St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Cadman Plaza West &amp; Montague St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Canal St &amp; Rutgers St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Carlton Ave &amp; Dean St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Carlton Ave &amp; Flushing Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Carlton Ave &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Carroll St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Carroll St &amp; Bond St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Carroll St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Carroll St &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Cathedral Pkwy &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Catherine St &amp; Monroe St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Center Blvd &amp; 48 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Central Park W &amp; W 96 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Central Park West &amp; W 100 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Central Park West &amp; W 102 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Central Park West &amp; W 68 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Central Park West &amp; W 72 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Central Park West &amp; W 76 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Central Park West &amp; W 85 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Centre St &amp; Chambers St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Centre St &amp; Worth St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Cherry St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Clark St &amp; Henry St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Classon Ave &amp; St Marks Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Clermont Ave &amp; Lafayette Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Clermont Ave &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Cliff St &amp; Fulton St_1&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Clinton Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Clinton St &amp; 4 Place&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Clinton St &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Clinton St &amp; Joralemon St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Clinton St &amp; Tillary St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Clinton St &amp; Union St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Columbia St &amp; Kane St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Columbia St &amp; Rivington St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Columbus Ave &amp; W 72 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Columbus Ave &amp; W 95 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Commerce St &amp; Van Brunt St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Concord St &amp; Bridge St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Congress St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Cooper Square &amp; Astor Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Court St &amp; Nelson St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Court St &amp; State St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Crescent St &amp; 34 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Crescent St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Cumberland St &amp; Lafayette Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Dean St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Dean St &amp; Hoyt St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Degraw St &amp; Hoyt St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;DeKalb Ave &amp; Skillman St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Devoe St &amp; Lorimer St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Division Ave &amp; Hooper St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Douglass St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Douglass St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Driggs Ave &amp; Lorimer St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Driggs Ave &amp; N Henry St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Duane St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Duffield St &amp; Willoughby St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 10 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 10 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 102 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 102 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 103 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 109 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 11 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 11 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 110 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 118 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 118 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 118 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 12 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 123 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 13 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 17 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 19 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 2 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 2 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 2 St &amp; Avenue C&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 20 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 20 St &amp; FDR Drive&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 20 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 23 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 24 St &amp; Park Ave S&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 25 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 30 St &amp; Park Ave S&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 31 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 32 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 33 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 33 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 35 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 39 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 39 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 41 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 41 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 44 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 45 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 47 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 47 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 47 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 5 St &amp; Avenue C&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 51 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 52 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 53 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 55 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 55 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 55 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 58 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 58 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 58 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 59 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 6 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 6 St &amp; Avenue D&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 60 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 65 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 66 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 67 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 7 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 71 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 72 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 72 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 75 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 76 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 76 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 78 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 80 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 81 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 81 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 81 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 82 St &amp; East End Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 84 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 85 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 88 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 89 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 89 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 9 St &amp; Avenue C&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 91 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 93 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 97 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;E 98 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;East End Ave &amp; E 86 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Eastern Pkwy &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Eckford St &amp; Engert Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;FDR Drive &amp; E 35 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Flushing Ave &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Forsyth St &amp; Broome St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Forsyth St &amp; Canal St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Franklin Ave &amp; St Marks Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Franklin St &amp; W Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 112 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 117 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 129 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Front St &amp; Maiden Ln&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Front St &amp; Washington St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Fulton St &amp; Adams St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Fulton St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Fulton St &amp; Clermont Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Fulton St &amp; Grand Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Fulton St &amp; Rockwell Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Fulton St &amp; Utica Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Fulton St &amp; Waverly Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Fulton St &amp; William St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Garfield Pl &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Gold St &amp; Frankfort St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;GOW Tech Shop&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Graham Ave &amp; Conselyea St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Graham Ave &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Graham Ave &amp; Withers St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Grand St &amp; Greene St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Grand St &amp; Havemeyer St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Great Jones St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Greene Ave &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Greene Ave &amp; Throop Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Greenpoint Ave &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Hancock St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Harrison St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Henry St &amp; Degraw St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Henry St &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Henry St &amp; Poplar St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Hicks St &amp; Montague St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Hope St &amp; Union Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Howard St &amp; Centre St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Hudson St &amp; Reade St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Humboldt St &amp; Varet St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;India St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;India St &amp; West St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Jackson St &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Jay St &amp; Tech Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;John St &amp; William St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Johnson St &amp; Gold St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Kane St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Kent Ave &amp; N 7 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Kent Ave &amp; S 11 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lafayette Ave &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lafayette Ave &amp; Fort Greene Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lafayette St &amp; E 8 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lafayette St &amp; Jersey St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;LaGuardia Pl &amp; W 3 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Laight St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lawrence St &amp; Willoughby St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lefferts Pl &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lenox Ave &amp; W 111 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lenox Ave &amp; W 115 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lenox Ave &amp; W 130 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Leonard St &amp; Maujer St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lewis Ave &amp; Kosciuszko St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lewis Ave &amp; Madison St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lexington Ave &amp; E 120 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lexington Ave &amp; E 24 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lexington Ave &amp; E 29 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lexington Ave &amp; E 63 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Liberty St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Lispenard St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Little West St &amp; 1 Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;MacDougal St &amp; Prince St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;MacDougal St &amp; Washington Sq&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Madison Ave &amp; E 120 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Madison Ave &amp; E 82 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Madison St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Madison St &amp; Montgomery St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Marcus Garvey Blvd &amp; Macon St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;McGuinness Blvd &amp; Eagle St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Mercer St &amp; Bleecker St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Mercer St &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Meserole Ave &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Metropolitan Ave &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Metropolitan Ave &amp; Meeker Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Milton St &amp; Franklin St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Montrose Ave &amp; Bushwick Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Mott St &amp; Prince St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Mt Morris Park W &amp; W 120 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Murray St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Murray St &amp; West St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Myrtle Ave &amp; Lewis Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Myrtle Ave &amp; St Edwards St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;N 12 St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;N 6 St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;N 8 St &amp; Driggs Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Nassau Ave &amp; Newell St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Nassau Ave &amp; Russell St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Nassau St &amp; Navy St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Newton Rd &amp; 44 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;North Moore St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Nostrand Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;NYCBS DEPOT - DELANCEY&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;NYCBS Depot - GOW&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;NYCBS Depot - STY - Garage 4&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Old Slip &amp; Front St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pacific St &amp; Nevins St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Park Ave &amp; Marcus Garvey Blvd&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pearl St &amp; Anchorage Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Peck Slip &amp; Front St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pershing Square North&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pershing Square South&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pier 40 - Hudson River Park&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pike St &amp; E Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pitt St &amp; Stanton St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pleasant Ave &amp; E 116 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pleasant Ave &amp; E 120 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;President St &amp; Henry St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Prospect Pl &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Prospect Pl &amp; Underhill Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Putnam Ave &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Richards St &amp; Delavan St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Richardson St &amp; N Henry St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Riverside Blvd &amp; W 67 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Riverside Dr &amp; W 104 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Riverside Dr &amp; W 72 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Riverside Dr &amp; W 78 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Riverside Dr &amp; W 82 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Riverside Dr &amp; W 91 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Rivington St &amp; Chrystie St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Rivington St &amp; Ridge St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Roebling St &amp; N 4 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;S 3 St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;S 4 St &amp; Rodney St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;S 4 St &amp; Wythe Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;S 5 Pl &amp; S 5 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;S Portland Ave &amp; Hanson Pl&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Schermerhorn St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Schermerhorn St &amp; Bond St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Schermerhorn St &amp; Court St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Scholes St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Smith St &amp; 3 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;South End Ave &amp; Liberty St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;South St &amp; Gouverneur Ln&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;South St &amp; Whitehall St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;St James Pl &amp; Oliver St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;St James Pl &amp; Pearl St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;St Johns Pl &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;St Marks Pl &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;St Nicholas Ave &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;St. Nicholas Ave &amp; W 126 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Stagg St &amp; Union Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Stanton St &amp; Chrystie St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Stanton St &amp; Mangin St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;State St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Steinway St &amp; 28 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Sterling Pl &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Tompkins Ave &amp; Hopkins St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Union St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Union St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Union St &amp; Nevins St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;University Pl &amp; E 8 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Van Dyke St &amp; Van Brunt St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 100 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 100 St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave - 1&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 106 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 106 St &amp; Central Park West&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 107 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 11 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 110 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 113 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 116 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 116 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 120 St &amp; Claremont Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 129 St &amp; Convent Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 13 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 13 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 13 St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 15 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 15 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 16 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 16 St &amp; The High Line&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 17 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 18 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 18 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 20 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 20 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 20 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 22 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 25 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 26 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 26 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 27 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 27 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 31 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 33 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 36 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 38 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 4 St &amp; 7 Ave S&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 42 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 42 St &amp; Dyer Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 43 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 43 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 44 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 45 St &amp; 6 Ave (OLD)&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 46 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 47 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 49 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 52 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 52 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 52 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 53 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 54 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 56 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 59 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 63 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 64 St &amp; West End Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 67 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 70 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 74 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 76 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 78 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 82 St &amp; Central Park West&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 84 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 87 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 88 St &amp; West End Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 90 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 92 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W 95 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;W Broadway &amp; Spring Street&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Warren St &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Warren St &amp; Court St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Washington Ave &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Washington Park&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Washington Pl &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Water - Whitehall Plaza&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Watts St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;West Drive &amp; Prospect Park West&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;West End Ave &amp; W 107 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;West End Ave &amp; W 94 St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;West St &amp; Chambers St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;West Thames St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;William St &amp; Pine St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Willoughby Ave &amp; Hall St&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Wyckoff St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
                  <groupfilter function='member' level='[none:End Station Name:nk]' member='&quot;York St &amp; Jay St&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Start Station Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Start Station Name])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Start Station Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Start Station Name:nk]' direction='DESC' measure-to-sort-by='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Start Station Name:nk]</column>
            <column>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:End Station Name:qk]</rows>
        <cols>([federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Start Station Name:nk] / [federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk])</cols>
      </table>
      <simple-id uuid='{71231E22-93C6-48D3-AB8B-31AE2DBC6CC5}' />
    </worksheet>
    <worksheet name='Distribution of starttime in time'>
      <table>
        <view>
          <datasources>
            <datasource caption='201802-citibike-tripdata_Full D (201802-citibike-tripdata_Full Data)' name='federated.02o4o8v0iko5im1gw8zel1w1fma2' />
          </datasources>
          <datasource-dependencies datasource='federated.02o4o8v0iko5im1gw8zel1w1fma2'>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Starttime]' derivation='Count' name='[cnt:Starttime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Starttime]' derivation='Hour' name='[hr:Starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[Action (Gender)]'>
            <groupfilter function='member' level='[Gender]' member='&quot;Male&quot;' user:ui-action-filter='[Action1_560E8F22C8EF42CCB6EBC0D9D2CFBF53]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[Action (Start Station Name)]'>
            <groupfilter function='member' level='[Start Station Name]' member='&quot;Pershing Square North&quot;' user:ui-action-filter='[Action1_8DCAD14E526D445B946B7F4917E6376D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[Action (Gender)]</column>
            <column>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[Action (Start Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Starttime:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Starttime:qk]' />
              <text column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Starttime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Starttime:qk]</rows>
        <cols>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[hr:Starttime:ok]</cols>
      </table>
      <simple-id uuid='{9A8C68E9-4D07-485F-BD8B-4705A79F65DD}' />
    </worksheet>
    <worksheet name='Number of riders based on age'>
      <table>
        <view>
          <datasources>
            <datasource caption='201802-citibike-tripdata_Full D (201802-citibike-tripdata_Full Data)' name='federated.02o4o8v0iko5im1gw8zel1w1fma2' />
          </datasources>
          <datasource-dependencies datasource='federated.02o4o8v0iko5im1gw8zel1w1fma2'>
            <column datatype='integer' name='[Birth Year]' role='dimension' type='quantitative' />
            <column caption='Age' datatype='integer' name='[Calculation_390124319466934274]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;year&apos;, TODAY()) - [Birth Year]' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column-instance column='[Gender]' derivation='Count' name='[cnt:Gender:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_390124319466934274]' derivation='None' name='[none:Calculation_390124319466934274:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Gender:qk]</rows>
        <cols>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Calculation_390124319466934274:qk]</cols>
      </table>
      <simple-id uuid='{2A27919D-132A-4AA0-AE6A-1257ED540B47}' />
    </worksheet>
    <worksheet name='Popular Start Station'>
      <table>
        <view>
          <datasources>
            <datasource caption='201802-citibike-tripdata_Full D (201802-citibike-tripdata_Full Data)' name='federated.02o4o8v0iko5im1gw8zel1w1fma2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02o4o8v0iko5im1gw8zel1w1fma2'>
            <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
            <column-instance column='[Start Station Name]' derivation='Count' name='[cnt:Start Station Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Station Name]' derivation='None' name='[none:Start Station Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Start Station Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]' field-type='quantitative' max='9227' min='1366' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='2000' field='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]' num-steps='4' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Start Station Name:nk]</rows>
        <cols>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]</cols>
      </table>
      <simple-id uuid='{45674C87-C927-4BEC-8869-33EB9EBF735F}' />
    </worksheet>
    <worksheet name='Popular end station'>
      <table>
        <view>
          <datasources>
            <datasource caption='201802-citibike-tripdata_Full D (201802-citibike-tripdata_Full Data)' name='federated.02o4o8v0iko5im1gw8zel1w1fma2' />
          </datasources>
          <datasource-dependencies datasource='federated.02o4o8v0iko5im1gw8zel1w1fma2'>
            <column datatype='string' name='[End Station Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Start Station Name]' role='dimension' type='nominal' />
            <column-instance column='[End Station Name]' derivation='Count' name='[cnt:End Station Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[End Station Name]' derivation='None' name='[none:End Station Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[Start Station Name]' user:ui-action-filter='[Action1_8DCAD14E526D445B946B7F4917E6376D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:End Station Name:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[Action (Start Station Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:End Station Name:qk]' num-steps='4' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:End Station Name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk]</rows>
        <cols>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:End Station Name:qk]</cols>
      </table>
      <simple-id uuid='{5AE14769-239E-4A45-92D7-67609E5890C8}' />
    </worksheet>
    <worksheet name='average trip duration, filtering based on gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='201802-citibike-tripdata_Full D (201802-citibike-tripdata_Full Data)' name='federated.02o4o8v0iko5im1gw8zel1w1fma2' />
          </datasources>
          <datasource-dependencies datasource='federated.02o4o8v0iko5im1gw8zel1w1fma2'>
            <column caption='Trip duration' datatype='integer' name='[Calculation_390124319448207360]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;minute&apos;, [Starttime], [Stoptime])' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Starttime]' role='dimension' type='ordinal' />
            <column datatype='datetime' name='[Stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_390124319448207360]' derivation='Avg' name='[avg:Calculation_390124319448207360:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[avg:Calculation_390124319448207360:qk]</rows>
        <cols>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]</cols>
      </table>
      <simple-id uuid='{E6E1A01F-B4F3-44D8-82D1-C7C45B0586E8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Analysing the distribution of the number of trips starts and ends for each hour of the day '>
      <style />
      <size maxheight='860' maxwidth='1320' minheight='560' minwidth='1320' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98134' id='21' param='horz' type-v2='layout-flow' w='49394' x='606' y='933'>
            <zone h='98134' id='18' param='horz' type-v2='layout-flow' w='49394' x='606' y='933'>
              <zone h='98134' id='16' type-v2='layout-basic' w='49394' x='606' y='933'>
                <zone h='98134' id='7' param='horz' type-v2='layout-flow' w='49394' x='606' y='933'>
                  <zone h='98134' id='5' type-v2='layout-basic' w='49394' x='606' y='933'>
                    <zone h='49067' id='3' name='Distribution of Endtime in time' w='49394' x='606' y='933'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='49067' id='9' name='Distribution of starttime in time' w='49394' x='606' y='50000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='98134' id='19' name='Popular Start Station' w='49394' x='50000' y='933'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98134' id='22' param='vert' type-v2='layout-flow' w='98788' x='606' y='933'>
                <zone fixed-size='280' h='49067' id='3' is-fixed='true' name='Distribution of Endtime in time' w='49394' x='606' y='933'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98134' id='19' is-fixed='true' name='Popular Start Station' w='49394' x='50000' y='933'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49067' id='9' is-fixed='true' name='Distribution of starttime in time' w='49394' x='606' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C361BD72-C822-4335-87BD-99203956780B}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Distribution of common end stations on popular start stations dashboard'>
      <style />
      <size maxheight='860' maxwidth='1820' minheight='560' minwidth='1720' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98096' id='17' param='horz' type-v2='layout-flow' w='99070' x='465' y='952'>
            <zone h='98096' id='7' param='horz' type-v2='layout-flow' w='99070' x='465' y='952'>
              <zone h='98096' id='5' type-v2='layout-basic' w='99070' x='465' y='952'>
                <zone h='59643' id='3' name='Distribution of common end stations on popular start stations' w='99070' x='465' y='952'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='38453' id='15' name='Popular Start Station' w='49535' x='465' y='60595'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='38453' id='19' name='Popular end station' w='49535' x='50000' y='60595'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98096' id='20' param='vert' type-v2='layout-flow' w='99070' x='465' y='952'>
                <zone fixed-size='280' h='59643' id='3' is-fixed='true' name='Distribution of common end stations on popular start stations' w='99070' x='465' y='952'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38453' id='15' is-fixed='true' name='Popular Start Station' w='49535' x='465' y='60595'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38453' id='19' is-fixed='true' name='Popular end station' w='49535' x='50000' y='60595'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0F7BDD5B-2239-48DA-8948-63532AA99AFD}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Popular start station and end station'>
      <style />
      <size maxheight='860' maxwidth='1720' minheight='660' minwidth='1420' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98130' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='935'>
            <zone h='98130' id='5' type-v2='layout-basic' w='89702' x='468' y='935'>
              <zone h='98130' id='3' name='Popular Start Station' w='44845' x='468' y='935'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98130' id='9' name='Popular end station' w='44857' x='45313' y='935'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98130' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='935'>
              <zone h='7594' id='8' name='Popular Start Station' pane-specification-id='1' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]' type-v2='color' w='9362' x='90170' y='935'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7594' id='10' name='Popular end station' pane-specification-id='0' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:End Station Name:qk]' type-v2='color' w='9362' x='90170' y='8529'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98130' id='15' param='vert' type-v2='layout-flow' w='99064' x='468' y='935'>
                <zone fixed-size='280' h='98130' id='3' is-fixed='true' name='Popular Start Station' w='44845' x='468' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7594' id='8' name='Popular Start Station' pane-specification-id='1' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]' type-v2='color' w='9362' x='90170' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98130' id='9' is-fixed='true' name='Popular end station' w='44857' x='45313' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7594' id='10' name='Popular end station' pane-specification-id='0' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:End Station Name:qk]' type-v2='color' w='9362' x='90170' y='8529'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6D44E98F-FB0A-429E-99BB-4B0971579877}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Records based on gender'>
      <style />
      <size maxheight='860' maxwidth='1820' minheight='560' minwidth='1220' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98130' id='8' param='horz' type-v2='layout-flow' w='99064' x='468' y='935'>
            <zone h='98130' id='6' type-v2='layout-basic' w='89702' x='468' y='935'>
              <zone h='43808' id='3' name='Count of riders filtered by gender' w='44860' x='45310' y='935'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98130' id='5' name='average trip duration, filtering based on gender' w='44842' x='468' y='935'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='54322' id='10' name='Number of riders based on age' w='44860' x='45310' y='44743'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98130' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='935'>
              <zone h='7711' id='9' name='average trip duration, filtering based on gender' pane-specification-id='0' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]' type-v2='color' w='9362' x='90170' y='935'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98130' id='15' param='vert' type-v2='layout-flow' w='99064' x='468' y='935'>
                <zone fixed-size='280' h='98130' id='5' is-fixed='true' name='average trip duration, filtering based on gender' w='44842' x='468' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7711' id='9' name='average trip duration, filtering based on gender' pane-specification-id='0' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]' type-v2='color' w='9362' x='90170' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43808' id='3' is-fixed='true' name='Count of riders filtered by gender' w='44860' x='45310' y='935'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54322' id='10' is-fixed='true' name='Number of riders based on age' w='44860' x='45310' y='44743'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{460A0AE3-803A-428D-BB51-2CFCF8CA68C7}' />
    </dashboard>
    <dashboard name='SnapBikes trip Data Analysis' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1616' minheight='964' minwidth='1616' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='99010' x='495' y='830'>
            <zone h='3423' id='3' type-v2='title' w='99010' x='495' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99010' x='495' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99010' x='495' y='14730'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Below Dashboards shows popular start station and end station based on count of riders in descending order.' captured-sheet='Distribution of common end stations on popular start stations dashboard' id='3' />
                  <story-point caption='This graphs shows we have higher number of riders in male compared to female. As per the graph female takes more time to reach end station.' captured-sheet='Records based on gender' id='2' />
                  <story-point caption='Count of start station and end station at particular hour.' captured-sheet='Analysing the distribution of the number of trips starts and ends for each hour of the day ' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{94E8DDA0-08E1-479C-BA11-B4DD4B02E6EA}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Popular Start Station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[:Measure Names]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:End Station Name:qk]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Longitude:qk]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Start Station Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1E08E1B-0D51-4E92-8570-6F662185B68F}' />
    </window>
    <window class='worksheet' name='Popular end station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:End Station Name:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04F72471-2858-4900-8242-477BFE549E49}' />
    </window>
    <window class='worksheet' name='Count of riders filtered by gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Usertype:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACB9D722-076C-4A98-907D-C5B984205DFD}' />
    </window>
    <window class='worksheet' name='Number of riders based on age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Birth Year:qk]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7BE681F-FDA7-4F03-9AB9-92D2282BA01B}' />
    </window>
    <window class='worksheet' name='average trip duration, filtering based on gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{998E82DF-FA9B-45B2-99E3-2A4E8EEBB339}' />
    </window>
    <window class='worksheet' name='Distribution of common end stations on popular start stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:End Station Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED447CE0-0042-4A8C-9DDB-13944C041904}' />
    </window>
    <window class='worksheet' name='Distribution of starttime in time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='10' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Starttime:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Stoptime:qk]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[hr:Starttime:ok]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[mi:Starttime:ok]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Calculation_390124319460843521:qk]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[yr:Starttime:ok]</field>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[yr:Stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACCDDA92-17CE-41CA-A36D-C734A1593D02}' />
    </window>
    <window class='worksheet' name='Distribution of Endtime in time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Stoptime:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[yr:Stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83055835-4405-4A22-B8D9-AC1B44802CF3}' />
    </window>
    <window class='dashboard' name='Popular start station and end station'>
      <viewpoints>
        <viewpoint name='Popular Start Station' />
        <viewpoint name='Popular end station' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3E3D127F-409E-4F06-95C5-17EB7E4B5101}' />
    </window>
    <window class='dashboard' name='Analysing the distribution of the number of trips starts and ends for each hour of the day '>
      <viewpoints>
        <viewpoint name='Distribution of Endtime in time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Distribution of starttime in time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Popular Start Station'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Start Station Name:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[cnt:Start Station Name:qk]</field>
                    <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Start Station Name:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>9059</value>
                  <value>&quot;Pershing Square North&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{2E0A1EE1-9DCD-40D3-9933-028A69B021B9}' />
    </window>
    <window class='dashboard' name='Records based on gender'>
      <viewpoints>
        <viewpoint name='Count of riders filtered by gender'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of riders based on age'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='average trip duration, filtering based on gender'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Gender:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{E9A9AB49-CD06-45A6-A3F7-18982D7B5BD5}' />
    </window>
    <window class='dashboard' name='Distribution of common end stations on popular start stations dashboard'>
      <viewpoints>
        <viewpoint name='Distribution of common end stations on popular start stations'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.02o4o8v0iko5im1gw8zel1w1fma2].[none:Start Station Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Popular Start Station' />
        <viewpoint name='Popular end station' />
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{4AE4B21B-EEBA-478A-95AF-288B2147DF28}' />
    </window>
    <window class='dashboard' maximized='true' name='SnapBikes trip Data Analysis'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{E3907A2C-B2CE-482E-8493-E74C33E77712}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Analysing the distribution of the number of trips starts and ends for each hour of the day ' width='192'>
      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
    </thumbnail>
    <thumbnail height='119' name='Count of riders filtered by gender' width='192'>
      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
      G89eKqaXiwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distribution of Endtime in time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Distribution of common end stations on popular start stations' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distribution of common end stations on popular start stations dashboard' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distribution of starttime in time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXUUlEQVR4nO3daXAc553f8W/33AcwM7hvkOAlkqIlMTJFijos2fE63tNee72uXe+hZDe1
      eZFKJa+TVOVV3iRVrrzYVG3F2RybbBxvynbWiVcry5IokhIlkhAJEiRAHMQxmMExmMHc08eT
      F2AoUxhcxEEM+v+pUomFfubBg5n+TT/9dD/9aEophRAOpT/pBgjxJEkAhKNJAMSG2GaZG5/0
      ky9VsO1He82WZWJaFrZlYdm11aN2P+kGiNqQSY4znsxiLv6UVPgp2vQ0vvoYyYUs9+9co+gK
      c/6Z4xRMyGSzeDweupsjZCo6z5w4+qSbvyo5AogN8YWbaHJnSJU9+Chz8f2LXLt+g2Ckjda2
      Ntoa6rAqJeKTcSommJrJR5cvMDY586SbviZNRoHERijbolAsEwj4qVQMUBYutwddd2FbBpYC
      XdPRNEDT0JZfhGEpAn7fE2796rY1ALZto+tyUBG1Y1v3VjmYiFojX9fC0SQAwtEkAMLRJADC
      0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0TY9KX76
      /ih6IIpVWMQfbSE7F6eho5dIyL8T7RNiR20yAIp0Oo1eMgmFw+RmhtAbj5CenyXs78S2bZkV
      JmrKJgNgYysNZSmyC7P4wxGWpkdobO3C5XIBPPy/ELVgWyfFW5YlARA1RU6ChaNJAISjSQCE
      o0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNt
      ekbYbCKJyxfEq1l4QhFK2TShSAyPS7Ikas8mZ4QpcplF4rOLaJqNZhYx3fX4PB56u9tlmVRR
      cza5t2qUikXaOzvQNB0Nhaa7AJkIL2rTpucEl8tlfD4fmdQ8vnCMwlKKulgjHpcuc4JFzZFJ
      8cLRpMMuHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIg
      HE0CIBxNAiAcbdPrBJcKOQzlQrPKeAJ1lPJLBOsiMidY1KRNT4ofHhqivfsAqYV5dHsCQw/j
      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
    </thumbnail>
    <thumbnail height='192' name='Number of riders based on age' width='192'>
      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
      IQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Popular Start Station' width='192'>
      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
      SE9WUnwZm4MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Popular end station' width='192'>
      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
      Zf5/1+ZLbY7o8zYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Popular start station and end station' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAf70lEQVR4nO2dWY/caJaeHzIiyCCDjH3LTcpMKZXaq9Vdqt6qe2C30ehu+MLAGBjAc2ff
      +kf0z/HAMGxj4PEAMzA8g+7xlErdKpXWVO57ZuwrI0gGSV9k16KpkiolRYYyMr/nSopgvjxf
      IE+Sb5zD80lBEAQIBOcU+X0HIBC8T0QCCM41IgEE5xqRAIJzjUgAwbnmpQRYef6I+/fv82xl
      41g//OTR01e+F3g29+/d494fHuIFHq1W5xUHBjSbrS/+w8bKcz799FMOKs2vvf4VX7xWLZfx
      jxWlQPBqQr/97W9/+8V/Hj56zE9/+jFPP39A2tT47PFTCGvsbr5ga2sTP2zQqFWIx03WNzap
      VapM5hP84bNHNLs2rtXh4HCXsJagu/uYZnSOD6/PUjlY42/+9h8pTE2zvvSI7VKDrA5PVndo
      Nev8/d/9H5K5AklT59P7n/Hxzz9GD3n81X/7H6haHM9q8GzpBREtxv/+n39NSDOQZZ+EafD5
      H+9zUGtjhvr84ckKpUqNyWL+PX6kgnHipSuAZ3e5f/8+eiLHZ89W+OHdu6wvP6XWsvj+Dz5i
      felztnd2gID1jQ0A/MDH9wMeffY5exsrqOkpErpCeu77xHpb/N3f/18S+UkWFhbJpw08L2Dt
      s8+ptkscdGUWLl9i4fICF6cKIMnc/cFNfvcP/8DyXoOFhQWuXZnD8zyQ4PMnS1xaWODG4iV2
      drYpr/yR6NQtkn6NF5s7ZC5ex7Ea7+FjFIwrLyVASI3x4YcfcvfOTZLRMPc+/RRZiWE1a9z/
      9BOiZhacLg8ePMByjm5A9ldXsQKZcDgEYY18NgFAt1Gh1fdg4DAIwlQONjjYXmNtv4kajhAg
      kS8c/aXutips7pUgCNjZ2UXTNKxuF8m1eLa8zvLKMuFQGEmWkP0+j5dWATCzU6w/vsfyfod0
      LIwkSSCN8uMTjDvScSrBv/9//8xPf/yjUcQjEIyUYyWAQHBWEV+DCs41IgEE5xqRAIJzjUgA
      wblGJIDgXCMSQHCuGZsECIKAN/nGdpjf7g5L6yzHNK5rCw/lTCPir37315Ra1WMd6/s+sjyc
      /B6W1lmO6bSuLa4b/Mdf/MUrjzlWAgRui88ebzF5YYZCJvH1d6hW66TTSfo9B02PfvVO4PLs
      8RITs/OkTP21+pWDHQahGFLgUsgftUcE/oCu5WDbfTKZNAD/9Z/+F59vPjtOyAIBAIVk9t0T
      AN/F8WB/8wX373e5fDGLBFQ6PvGIR61RhVaLhjcgGi/Sqpf5yUffJ6qGqB/ssLl0iKvPkI9B
      p3ZA09PQZZe+1SGSmGQya9Jv17AaFfbLe3hOmGQ8TKPto9Kn3upyaXZ6SB+JQPAVx0uAkMb1
      G9eQnSZavMlEMUvIHxBpWGRTCQgGOLrBVMJgd3ef1XoL8PB8mWQ6QbdxSDSm0bXbpLNFDEkl
      kzRpNyoEERNDV8kmdA5UjU6rRXZ2kmwixvrmNrnshZP9BATnmrHpBQqCgMebS1hO71jHe75P
      aEj3pMPSOssxnda1aYrKnfmbrzxmrEzwVnuTWq9+rGNPqyl7nzH925u/IqUnX3ptMBgQDr/7
      r8GwdIapdRydtz7L4f421XKDuRu30ELffL9arZLJZL71Z2ulffZqHW5evczys6fEc5MYCqxv
      7JEtpqk3LK7MZHm6tk8xXyCdSyEDf/vs71kqLb9tyOeen87/6BsJcN556wRwHAffH7C5vkLE
      sWkHLn4v4LDZ4dJkioEU5nB7i4EEclhh+6DGjcszhMIKUdnD6ffouwGO4wCgKCrxdAojGoWU
      gqxoRGSfnY1V+sEc07n00BYtEHzBWyeAYRh0LZdcrkBKC7G0ukliKomRsolFAoJIDDnuIUkQ
      DUso0Ri9doPpK7dxmiWMP31lapgGAK1Wk75lUfVsBkTw4xqSHOLC7EX6Y+FSBOPIWJngF4cr
      9D37WMf7nocc+pZ7s7dgWFrvO6Yr+ctokehLrwkPMEaslNeECX4HrQup6W8kwHlnqAkQ+C7l
      SoN6vUE6nUSPhllf22PiQgHbCSgkFJ6u7jOVz2Pk0jjVEi/2a3z/5iJb66uoZoZ8JsGz50tc
      v3btG/rCBL8bwgR/k6EmgCSFqe9v4MTyOI5L0owRz6RIJ9McHJaQIxqK7LO/uU7U88lGPHD6
      dPoDmo0WahDBlLtsbOyh6TE8JCqbL9Bys9y+Oj/MUAUCYNi3QJKEkZ0kYSh4oQStVpW+1aVS
      LlGtt8mn4yCHmJybpe0ESHKYmKEjAYViHgcFR1b41S9/Rqvdw+rZzMzOEdLEXy3BySBM8Ai1
      3ndMwgR/E2GCR6g1ipg+vHCHa8XFoZzjPPBOleCm5bEwf5EXL14wOzPJ8tISxYXbtA/WUc0M
      ZiyKEdN59vgB+elr4DSoVKtMzF0n8S3l49dVj0GY4ONgqDGRAG/AO1WCIYQkScTjcVTdIJ7J
      kzUiDKJRut0mm+sb3L17m35vgOM54Dj4vsf2xiq1kEvd9gl7Huv7VW5emsQaSNQPt7EGMrIc
      YnXngDvXLiOHI0xNTgxx2QLBEe9UCe41egSBT7NWIazqJBJHZtXzfaJ6nIm8dGSMzThyEBAz
      DNrdPpl8gVxcxV5eJ5nLEdZNYnqYMAqKHMeQJDQ1jKxEsbsNCnM3hrZggeDrCBM8Qq1RxDSZ
      KJIzssfWESZ4jBAm+NVaSijCX/zgz4eifZ4YbiU48Hj+5AmJ/BQTaZ3nawdcuzL30jEHu1s0
      +z5X5qaOqsaNJulUAl0Nsbaxz+RUHteXyRlh0Q79BhhqTCTAWzDkK0CA6wywbYfdjRJ7pRa6
      FiJEwNOHD7jy/Y+JeB79roUvhanvbeAaORxnQDYVZ+ANMJNpapUKsmKKdmjBiTPkBJCJGTpG
      TCdiavysOEHXhYEc5tKVqyRNHafTQ9O0I3OcmyQeU/AjCdrtFpqm06gcUmv0yCVN0Q4tOHGE
      CR6h1knGFJJkbk5ef2MdYYLHCGGCX9b6aPYHouj1jpw6E5wvpqg1euKZ4GMQ10yRAO/IqTPB
      WlTHHbTFM8GCkXDqTHC30yGm6/iDgTDBghNHmOARag07pun01BtVfb8NYYLHiPNugr/e6jzM
      X7jzzKkZjBXXQpRqHabzCZ6u7XJ9tiBM8L8gpohW52FzagZjabE4aqvLkydPadg+sjIrTLDg
      xDk1g7G6rTqVapWrH9zFajeECRaMBGGCR6j1rjpfb3U+beZVmOARcF5N8HRyin915WfvfH7B
      NznRwVjZbIbPP3/E3IUpOt8xGGt9+QWBajA3MyEGY/0Lfjz3kUiAE+JEB2NtrzzjsFJn8dpN
      JLv86sFYvQGO6xBg06vvicFYgpFxooOxElOTxHMNeq3y6wdjSUem2o/ExGAswUgRJniEWm+r
      E4+azGUuvvTaaTOvwgSPgPNkgoXxHQ0nOx1aDbO6vkcqY9DuuixezAkTfEyE8R0NJ2qCs6k4
      nu/i2A624woTLDh1nKgJPmpxjmEaBr7k4HsDYYIFpwphgkeo9SY632Z8v85pM6/CBI+AmntA
      220e69hxNcGL6etcTIrbvVHxzglwsLtJ25FYmLvA3tpjBvokrf01igu3ae6toifzGLr60pTo
      wK5TLteYvXYL/U8RVKs1Mpk0QeC/0gTf2/s9O+3Ndw35VBMNaSIBRsg7J8BRO7PKoNdgdXWL
      9JXJL6dEO9EovXaDjY0GH/3g1pdTon3HQZIkVp7+kVrXJ63JhEIhWtaAQswRJlgwMt45AQzD
      xO44hLUkH//8ZzQ9DckNQ3A0JVozkxQlCelrU6LNVJbpC3OU9rcxkhK5dBKCo2cDHNkQJlgw
      MsbKBG83N3ED51jHe55HaEgmeFhax9HJaDmS0dR3ap028ypM8AjYbW+faRMclsJcSl155/MI
      js9wEiAIKJXK1Op1Mpk0mYTBi7V1FEWn3e1x8+ZVVp49JjMxTTQSRdfg0R8fM3f7Q7CqdByI
      DJrI8QukjdC5NcHRUJR/Pfer9x3GuWI4CSBJ9PttBlaPhm6TzaYx9Bi2L3ExZWAFEFVVmrUS
      Gy2f712dpo/MoN8hnUzTPSyTziSp9AJRCRaMlKHdAsW1KOnrE7QafQZWi0a3TzGb5qDZYVGC
      iu8TzxSRpAZIEnHTIECiXilRbbTBkegGDmpCmGDB6BAmeIRa36UjIzOXunwsrdNmXoUJHgFn
      0QTn9AJ3inffWVvwdrxVAlRrVTLpo6FX9coBA1knl46/dIzdbiMZBk63i2EcjT6pHOxS7bhM
      FjKYpsnu1jp9P8z8hSmePPqMmUvX6NQOaNsBC9OZbwzGOosm+Hr2tkiA98hbJYDjONitCn/z
      d79jZmGeeETmH/9pj7u3ryIFfR4+eE4xXyA2kadZbSD3aiiZiyxMp3GqbVaXl5i9cgNv4NLt
      uQR8NSDLdRxsJxDToQUj4a0SIHBtyo0B165dIT05g46DI6nITpdIbobFqx6ZbJaOC2o6QA0n
      CWkJvIGHoqpksnEkIBxR0PhTlfhPV4mYYeCFfTEYSzAShAkeoda36eiRGBPG1BtrnTbzKkzw
      CDhLJjgshUXR6xQwkmeCpy8U6L9uMNaNRXa21mn1fa5dmT8XlWBVVH1PBSN5JthMpLFLpVc/
      E2wPyKVTRNywqAQLRspIngluVkuvH4wF9H2ZQtqk0fBEJVgwMoQJHqHW13XepOr7bZw28ypM
      8Ag4KyZYVH9PDyeSAKW9bRrWgMuX53j51yag3e5imgZWtYqUyaC9QsPrNc9sJfh69pZIgFPC
      iSRAb+ATGjisrSzh9m3WNg+YvZij1LTRZbjz0Y8Y2DZbK0s4XRc95BFEFDaev2Bmfp5Kx+HP
      ProlKsGCE+dEEiBpaOxZDpOFIprsI0V0TENFi8tEfBsCl8NOj8l0gnrYpZBJEhAQAcxkmqjp
      iEqwYCQIEzxCrS903rb6+3VOm3kVJngEnBUTvJi+PoSoBMPguxMgCKjWa1+2PwMMbAs/rKN8
      7Y9ip93GMM1/8aM+z56/4Pq1qy+9/m37BBsKrG/scXlxluVX7BN8VkxwNBQVw69OCce6AjiO
      w+qzz9io2EynomiqQkvW6DYa5BMatW4f37KIJZPYAx8Vl7CWZCIO61sHxGI6HhK7y4/JXLxJ
      IcY39glWFJV4OsXSk6c0xT7BghFxrATothqoRoY5XSKT0Oh3e+RjCbR8lp3Vp3T6YS5PFZHD
      Kr1BQC6VQCJg4Hn85hc/pNl1sSybi/MLaIk4stf7xj7BrVaTvmVx/Xt36bbEPsGC0SBM8Ai1
      vtA57vCr13HazKswwSNg3E2wjMy/mf/NECISDIuRtEMXJzOUq22uzubPdTu0GoqKBDhljKQd
      Wtd03EFdtEMLTh0jaYfudtrEdP3VWyQh2qEF7wdhgkeoFfgBlzOLQ4jo9JlXYYJHwLib4LvF
      Hw8hGsEweWUCBF6fp8/XuDB3CVNXXyuyv7NJzwsxf3H6O04XsLr0jGgiz2Qhw7Pnz780u+1O
      G9N4uZK8uvQUP6JjxnQK+dzYm+DF1A1Seua7DxSMjFcmgNOokJ1dpFXZZPmwiWpG8LwwgdMm
      Ikssbx0yd+ky+VwOTYvSqHZ48ewxth8iYWj021WeLG2zePs6YcdmaWOHX/zyV7h2n8B2cDsl
      Nte20HSNzd0KZsRFjyXp2gNMJWBi9gqOYxNRYvT7x9sZUiB4U16ZAEp6ks6LF8QSSfQkpA2F
      nheiXmqTn5pFUgyyhQK5dJJqaQ9FUVAlCbvr4No9tHiOa9c0MrkJkip4IZWwBKpuEIrI9DyV
      X/76F5T3D5meyGMo4EthIvaAQjaFGYsiz17GMAwazdYoPxPBOUKY4BFqFfUpYmpsCBGdPvMq
      TPAIGFcT/KOpnxFXEwwGg6HEIxgex0qAIPBZfv6MeG6SYvb1PSxBENDr99A1nWq1SiaTIQiC
      lwzvF3S+qATfXGR9+QWBajA3M3HmKsHXs7eJq4n3HYbgWzjeFcDvEFGTdNotHm6vYPf7+FGT
      xtYmxZk5Bq5LfCpPp1wmn83RruzjxrIogw6H1QaXJ0w217ZQ9RieB7XdZaLZWeby+lEluDfA
      cR0CbFEJFoyU4yWAbCJziKIlKeSuYjXruHKUrK5iJLLEY1H6vkNamQFVI6ZFKNUtJmbmkCTo
      DTx++etf0G51sawesYvzhLQEkuwdVYIlMAwDPxLDkRVRCRaMDGGCR6A1bV5ADUfH1iiOUmeY
      WmfOBN/b+z3l3uGxjg2CAEmShnLet9VSZIX/dOc/DyUGwckw9Hbo7e0dStUOxXwaNXAp9wOK
      KZ31nRIfXJngk0fbFOMaoVSWjNznwUaFn3/0wZfPBufTJvc+fcAHH9xCkiR63RaSYhCPRdlt
      b4+VCVZDr6+gC94/Q2+HbpZLxLMFJClMRAvT3d3ETs4yNzeHrChM5XTsjk8ul8Eq7RKTHNq9
      AZZlYR0eEnHqOI7N/mGZnuthVfdI5qeJx2aGGapAAJxAO/TslWtElRBeSCPs9ylMz6AGHrVa
      jZQxQYDC/LVJKtUq2VQKjzBhGS5dvoQdRNCjET6emMW2HVzXxUvpDOToUMMUCL5grEyw7/vH
      NqPjaspGrXXadIapdeZM8H9f+i9jZYJnE/P8+vK/G0oMgpPhrRJgffk5hw2LOzcXsfoO7U6P
      pBHBDhQkt0utaTE9PQHI9HodfClCPHY0B/pwd4tG3+fW1Tm2t/coVdtHhjnkU7V8ovRp2XD9
      YoZ7j7fJmCqxbIGpXHoMTbC4dTvtvPUVIKoobO/uE5YlFMlnvSTRa7XIZ5NoqszT58vIvk86
      Y3JQ7ZAzQhj5eZAkbKuLL0Volg+PDLMcptdr0K00GGQKmFqArMSZzGq0OwEXs2IoluBkeKsE
      SGcyyNqAYi6DEpbY3iszm4hgZ3PgdFDNFMl0DgDf7aPHc7QaVfJpg46cQtGSXxpmNSLjh3XU
      UAYih+TTJh0HJFkikFQWr01Qr9bJf0cPkkDwNggTPEKtsxzTuK5NmOAT0hJV4PHg1JjgVFzn
      2fM1zFSMqJZgKhUZaxMsqsDjwakxwUEAF+bn8PptdstlZgpXhQkWnDinxgQPrAaNWo18Ps1M
      NC5MsGAkCBM8Qq2zHNO4rk2Y4BPSEiZ4PBhuO3Tg8+ThQ6YvX8UI9Xnw4pBbi7NISDTqZRLZ
      CUrba68wwRqPnqwwd2ma7d0K37syKUyw4MQZ7hUg8LB6PQ4PDql5FnanyWEphiT7bK9tcBH1
      lSY4HI6gR1WQI6iqKirBgpEw3OcB5DCX5ueIJjKE8Jm7JNF3fTxCKJJMLBEHTf5WE+w7beLZ
      HKrkk8vlhAkWjARhgkeodZZjGte1CRN8QlqiFXo8GEoC7G6t07Xh8uUZ1p49xVXShN06UjRJ
      r1VifvE2u2vPIZrgytwMf7z3CVdufY+oItHt9rEHATgdFN0kGo3iex61RpvpyTzPH96nsHCH
      pBYaMxMsWqHHgSE/EhlGN1Pkp6dxOgZLazvksgV0NQzBAKtnM+g36Lkuu3t7dDs95KBHRItj
      6lH6+6tUtAw7m4cYpk6xkKTesQl2tkkuzA41VIEAhpQA6XSa7n4NCEjncoQl6HkexclJNHlA
      z/FIZwtkVINAUvjRTz/GtW1cxyUsedS6Ltl0AoIcpcNDPvrBDQ4rdeQAvv/DnxAMjjcLSCB4
      U4QJHqHWWY5pXNcmTPAJaf37q39JLlYYyvkFJ8dXCRAErLx4RjSRoLZfZX5hgb7bR8an3ezi
      9NukClN02x1yKYN616XfLJPIzzCwGpipHLbdo9esUOtJRIIehel5muVdOg7cuHqJp48eky5O
      E5UHIEfw5Qhut4GZzFCpVikU8riOSyQSotfr02m3mbpwgS8Gk4+TCba9/vsOQXAMXroCSOEo
      hUwS35bYXXpCYvE6/YMNag2XRCGD06wRlX2e7XokIgMULYbdLbO+skM8XmV68SrZ4hSVJ0tE
      izmSpk6rDD3Lwg8GKIpOpVIiqip0GxVUM051v0wiXieTTrFVOqRfqRLPZrFru+hTt97X5yI4
      J3yVAJLERD5NrdmnUMzhpU3UmIY7dRHCVYrpOF3Hp9PuMGkMQE2RiccIAJkQmpkhHoviWm2S
      hSL5uEajbZFKp1HNDJKsksmYeCGNuKHhZJJ0XYmkrqPFM8TUCBk8BpksASHCuRzlUgnLkpAB
      TdPe24ckOLsIEzxCrbMc07iuTZjgE9ASVeDx4dgJENhVtmoqCi08x8EwYviKSUyR6LbqRHQT
      y7IJnC7RaJTdcp2kaVIoZvE8mZVnnxMoMcxYFE322ah0+Oh7N3jy8DOyU7PEtRA7BzWmciZP
      Vne5M8bt0KIKPD4cf+c3OczA6WHbXXwUDjdWqdUrbO2XWV5eobS3SrsH7VaT6sE+qDEK+SQP
      HzxCCh+dJpk82ifLAySnR8/96u5Li8UxdZXtnV36/d6X7dCOK5EV7dCCE+LYVwApHEcPbZPM
      zSIDXtogEovR7/ZJ6yEkRcOIxaketomnsoRCMtVak2Q2hyLD5as3UJQItm2D50A4igykM0e/
      3N1WnVa7zdzibS66fdEOLRgJwgSPUOssxzSuaxMmeMhaFxPz/EYY4LHhnRLgYGeTph2QNVXk
      aAKv14YQ9HoORiKB33do9ywmClmqTYu8yZnfIkkY4PHinRLAcT0uzsywu7FMw6qQMDTUqErg
      +1itKla5TqyQ4ZPPlzG1CMXMZbFFkuBU8U4JMHNhhq3dQ5LJFOmiSSyqHN0uAAEBXiJLJKqQ
      SGSp1FtIkiS2SBKcKoQJHqHWWY5pXNcmTPCQtX4y/XM+KHw4lPMKTp5TMx16spjhd//8Gbev
      zdPq+0wmw2NZCb6eFR2s48SpmQ69u7VF4DtEzTT9QVUMxhKMhFMzHToaKZCbvEC3UaZjuRSy
      ohIsOHmECR6h1lmOaVzXJkzwELXEc8DjxwkkQMDO88fo87dIhR3uffqIDz64gSQdtU0rRhqr
      uvfKdmhFcpHUOJPJ0NiZYPEc8Phx/HboYyORy2UBqOxsYjt9Dkpl1ncOWV5eoVwuv7Yd2rIs
      Dg8PRDu0YCQM/woQBJQ7PSS3TCY/w89m5rFtF9cdkDMjyNE4Wsh7ZTv0zNwl2l1btEMLRoIw
      wSPUOssxjevahAkekpZogx5PhrtFku+yvb1DqdqhmE+TTZlsH9QI+X0a1oDbC8Uz2w4t2qDH
      k+HuECOFaZZLR9VdKUw0FsfUu9iWczQ/SImLdmjBqWLI49GPqrtRJYQX0ui26jTbbYqFAhHD
      Fe3QglOHMMEj1DrLMY3r2oQJHpLWn1/9S/KiCjx2vDYBgsDl8cOnTM3O0m61IRhQKBQBaNUr
      2IMAXfLZtWUWpnJIQK/TQIom3nif4HhM5dGTF1xamGP/sMatS4WxqgSLKvB48vorgO8SS+bp
      Vg+JRmQ2uhL+wQGDwYCoquL7Pq12hVQmx4MnG+QTISIyhFyZWqvyRvsEm8kUF2Yvosgyc3Oz
      yEpEtEMLTpzXJoAU0kjoTSL6FPVanQ/ms9hWm34QIWkcPeASZNPsVxrcWZyg0uqjh30isThK
      Kv5G+wTjDcgXJmjXDqjX6iSmC6ISLDhxhAkeodZZjmlc1yZM8BC0RBV4fDk1zwSrgUvZDoh4
      PboO3JzPj40JVkPq+w5B8JacmmeCI0qY7u4mRjoOgSeeCRaMhFPzTHDI71OYmSFjRmnbgWiH
      FowEYYJHqHWWYxrXtQkT/A5awvyOP8dIgICN1RcMZI2ZYoZ2x6LTd8nEo3TsAFVyqbRsNPo0
      B2HCgy7FC5epH2zR88NcW5jnwR/uMZVPYIUKaIqL58t4/TaRkIIlSUwmDdo9h92tbRKpJFHd
      JG9Kp94EC/M7/hzrmWAvCNFp1dnd3SfwB2yurlFudvDcPo2Oha6EyU1O43TbxBIZEoYGUoDV
      7fH1+yur2UaKqmhRiVq5xNZOBd3vce/xMuVqg3yhQCQcJhg44plgwUg4xhVAYnqywH61zUQ+
      S4gBs/NzFApZJKDdqBLWk+APyBUnSBsKrW6fVCqDlggjSRKpVIpIPM9sVqPTqdELImQnpkiY
      JrW2xd0bWerdAarkEI0XUGSECRaMBGGCR6h1lmMa17UJE/wOWn9+9T+QjxWHcg7B++FYCbCz
      tUXgdQmIEoqlwHdRcXD6XRpBnILSZ6vaQ1MCMoVp7GaZSsfhgxtXef70c1Ipg4MqXJ7LU29Z
      mKpE27LRDJ3djT2u3lykdFghn0nQ7lj0XJ+JxOkfjGV79vsOQfCOHMsEF1IqJUvlsFymXd6k
      VC7TarfBd0mkc5jZInpg4asJskkTJHB6FgM/QNVM0nGDVEZjdXmX1fU12j0b3/exO00y6QT3
      f/97Dg4OWdneR8Kj1W4LEywYCce6AoSNPAsXOkjkiEZkdstN9LCPnszSblSQoyZKssBUPkG1
      0SaVShNWTZBkMkmTjhuhmIuR1nXqVop8NsnR10M+B3sHfPTxx+xs71GcnCAUOPQGsjDBgpEg
      TPAItc5yTOO6NmGC31Lrx1M/53tFsRXSuHOig7FSCZ1nT9eYnJ1gY2OPj27NfvtgrLsfsLO5
      RqnV587NxbEYjHVNbIV0JjjRwVhBADOX5sjFVYJARVbMbx+M1R8QN2MYuRnqB1tiMJZgZJzo
      YKyB1aBZq2LoM0wUM0ie+8rBWFIsSTSq0A9NisFYgpEhTPAItc5yTOO6NmGC31JLVIHPBt+Z
      AKW9bWpdF0UJkdRV5IhOzNDodS0sx8PutglJPulskVK1wkQuxZOlde7cvsGDP3yCGQ2jTn2A
      W1nBIcrifIFPPnnMwtUrdC2LYj5Nt1HDjZjY3RaFTJxSo3fqK8GiCnw2+M5KsO24XLwwjQQs
      r6xQq5V4/PAZa+trlMtlCAbUqxWefvYQJRzwZKtMLpP88ueTycSf/hVgWT0kWWV6Ksv2+iaR
      oMfTtV00BTb2KoQD2Dys4va6ohIsGAn/H7okZyEgKtxGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Records based on gender' width='192'>
      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
      oWvrLHXo/wPO1K2D1TZS6AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SnapBikes trip Data Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='average trip duration, filtering based on gender' width='176'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
